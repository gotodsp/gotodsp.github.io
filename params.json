{
  "name": ".x->y=z",
  "tagline": "Welcome my friends!",
  "body": "`// 色子有六面，数值分别是1、2、3、4、5、6\r\nprivate static int sides = 6;\r\n\r\n/**\r\n * 打印\r\n * @param dist  待输出数组\r\n */\r\nprivate static void print(double[] dist) {\r\n    for(int i = 2; i <= 2 * sides; ++i)\r\n        StdOut.println(dist[i]);\r\n    StdOut.println(\"-------------------------\");\r\n}\r\n\r\n/**\r\n * 根据统计数据计算概率值\r\n * @param dist  统计数据数组\r\n * @return  概率数组\r\n */\r\nprivate static double[] computeProbability(double[] dist, int testTimes) {\r\n    for(int i = 2; i <= 2 * sides; ++i)\r\n        dist[i] /= (1.0 * testTimes);\r\n    return dist;\r\n}\r\n\r\n/**\r\n *  两个色子之和的理论概率值\r\n * @return  理论概率值\r\n */\r\nprivate static double[] theoreticalValue() {\r\n    double[] dist = new double[2 * sides + 1];\r\n    // 统计值出现的理论次数\r\n    for(int i = 1; i <=sides; ++i)\r\n        for(int j = 1; j <= sides; ++j)\r\n            dist[i+j] += 1.0;\r\n    // 计算理论概率\r\n    dist = computeProbability(dist, 36);\r\n    return dist;\r\n}\r\n\r\n/**\r\n *  用随机数模拟掷色子并统计求出试验概率\r\n * @param N 抛掷次数\r\n * @return  试验概率\r\n */\r\nprivate static double[] simulate(int N) {\r\n    double[] dist = new double[2 * sides + 1];\r\n    // 做N次随机试验模拟抛色子,并统计数据\r\n    for(int i = 0; i < N; ++i) {\r\n        int a = StdRandom.uniform(1, 6 + 1);\r\n        int b = StdRandom.uniform(1, 6 + 1);\r\n        dist[a + b] += 1.0;\r\n    }\r\n    // 计算试验概率值\r\n    dist = computeProbability(dist, N);\r\n    return dist;\r\n}\r\n\r\n/**\r\n * 试验概率值能否与理论概率值至少匹配到小数点后三位数\r\n * @param dist0    理论概率值\r\n * @param dist1    试验概率值\r\n * @return  能匹配到小数点后三位数则返回true，否则返回false\r\n */\r\nprivate static boolean isMatch(double[] dist0, double[] dist1) {\r\n    for(int i = 2; i <= 2 * sides; ++i)\r\n        if(Math.abs(dist0[i] - dist1[i]) >= 0.0001)\r\n            return false;\r\n    return true;\r\n}\r\n\r\n/**\r\n * 测试得到符合要求的试验次数N\r\n * @param initTimes   试验初始次数值\r\n * @param dist0 理论概率\r\n * @return  符合要求的试验次数\r\n */\r\nprivate static int testGetN(int initTimes, double[] dist0) {\r\n    int N = initTimes;\r\n    boolean match = false;\r\n    while(!match) {\r\n        double[] dist1 = simulate(N);\r\n        match = isMatch(dist0, dist1);\r\n        if(match)\r\n            print(dist1);\r\n        // 当前N不合要求，则将N扩大10倍\r\n        N *= 10;\r\n    }\r\n    return N;\r\n}\r\n\r\npublic static void main(String[] args) {\r\n    double[] dist0 = theoreticalValue();\r\n    print(dist0);\r\n    int initTimes = 1000000;\r\n    int N = testGetN(initTimes, dist0);\r\n    StdOut.println(\"至少试验次数的数量级： o(\" + N + \")\");\r\n}`",
  "google": "",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}